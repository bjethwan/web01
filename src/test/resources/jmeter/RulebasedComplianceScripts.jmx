<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ComplexComplianceChanges" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PROTOCOL</stringProp>
            <stringProp name="Argument.value">${__P(SERVER_PROTOCOL)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVER_HOST</stringProp>
            <stringProp name="Argument.value">${__P(SERVER_HOST)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PORT</stringProp>
            <stringProp name="Argument.value">${__P(SERVER_PORT)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_CONTEXT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_CONTEXT</stringProp>
            <stringProp name="Argument.value">${__P(SERVER_CONTEXT)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_CHECK_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_CHECK_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_check</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_LOGOUT_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_LOGOUT_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_logout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">MGMT_USERNAME</stringProp>
            <stringProp name="Argument.value">${__P(MGMT_USERNAME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">MGMT_PASSWORD</stringProp>
            <stringProp name="Argument.value">${__P(MGMT_PASSWORD)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROVISION_PORT" elementType="Argument">
            <stringProp name="Argument.name">PROVISION_PORT</stringProp>
            <stringProp name="Argument.value">${__P(PROVISION_PORT)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_HOSTNAME</stringProp>
            <stringProp name="Argument.value">${__P(RDS_HOSTNAME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PORT" elementType="Argument">
            <stringProp name="Argument.name">RDS_PORT</stringProp>
            <stringProp name="Argument.value">${__P(RDS_PORT)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_DB_NAME</stringProp>
            <stringProp name="Argument.value">${__P(RDS_DB_NAME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_USERNAME</stringProp>
            <stringProp name="Argument.value">${__P(RDS_USERNAME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">RDS_PASSWORD</stringProp>
            <stringProp name="Argument.value">${__P(RDS_PASSWORD)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_URL" elementType="Argument">
            <stringProp name="Argument.name">RDS_URL</stringProp>
            <stringProp name="Argument.value">${__P(RDS_URL)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DRIVER_CLASS" elementType="Argument">
            <stringProp name="Argument.name">RDS_DRIVER_CLASS</stringProp>
            <stringProp name="Argument.value">${__P(RDS_DRIVER_CLASS)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CURR_DATETIME" elementType="Argument">
            <stringProp name="Argument.name">CURR_DATETIME</stringProp>
            <stringProp name="Argument.value">${__P(CURR_DATETIME)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBDAILECT" elementType="Argument">
            <stringProp name="Argument.name">DBDAILECT</stringProp>
            <stringProp name="Argument.value">${__P(DBDAILECT)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Server details_mysql2" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PROTOCOL</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVER_HOST</stringProp>
            <stringProp name="Argument.value">mysql2.konylabs.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PORT</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_CONTEXT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_CONTEXT</stringProp>
            <stringProp name="Argument.value">/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_CHECK_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_CHECK_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_check</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_LOGOUT_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_LOGOUT_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_logout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">MGMT_USERNAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">MGMT_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROVISION_PORT" elementType="Argument">
            <stringProp name="Argument.name">PROVISION_PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_HOSTNAME</stringProp>
            <stringProp name="Argument.value">mysql2.konylabs.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PORT" elementType="Argument">
            <stringProp name="Argument.name">RDS_PORT</stringProp>
            <stringProp name="Argument.value">3306</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_DB_NAME</stringProp>
            <stringProp name="Argument.value">Jenkins_mdm47</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_USERNAME</stringProp>
            <stringProp name="Argument.value">anji</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">RDS_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_URL" elementType="Argument">
            <stringProp name="Argument.name">RDS_URL</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://mysql2.konylabs.net:3306/Jenkins_mdm95</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DRIVER_CLASS" elementType="Argument">
            <stringProp name="Argument.name">RDS_DRIVER_CLASS</stringProp>
            <stringProp name="Argument.value">javax.sql.DataSource</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CURR_DATETIME" elementType="Argument">
            <stringProp name="Argument.name">CURR_DATETIME</stringProp>
            <stringProp name="Argument.value">CURRENT_TIMESTAMP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBDAILECT" elementType="Argument">
            <stringProp name="Argument.name">DBDAILECT</stringProp>
            <stringProp name="Argument.value">MYSQL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">enable this to test different server (by overriding Test plan level values)</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Server details_emm11" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PROTOCOL</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVER_HOST</stringProp>
            <stringProp name="Argument.value">emm11.konylabs.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PORT</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_CONTEXT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_CONTEXT</stringProp>
            <stringProp name="Argument.value">emm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_CHECK_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_CHECK_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_check</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_LOGOUT_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_LOGOUT_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_logout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">MGMT_USERNAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">MGMT_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROVISION_PORT" elementType="Argument">
            <stringProp name="Argument.name">PROVISION_PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_HOSTNAME</stringProp>
            <stringProp name="Argument.value">mdm.konylabs.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PORT" elementType="Argument">
            <stringProp name="Argument.name">RDS_PORT</stringProp>
            <stringProp name="Argument.value">1433</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_DB_NAME</stringProp>
            <stringProp name="Argument.value">Jenkins_emm38</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_USERNAME</stringProp>
            <stringProp name="Argument.value">dbclient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">RDS_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_URL" elementType="Argument">
            <stringProp name="Argument.name">RDS_URL</stringProp>
            <stringProp name="Argument.value">jdbc:sqlserver://${RDS_HOSTNAME}:${RDS_PORT};databaseName=${RDS_DB_NAME};</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DRIVER_CLASS" elementType="Argument">
            <stringProp name="Argument.name">RDS_DRIVER_CLASS</stringProp>
            <stringProp name="Argument.value">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CURR_DATETIME" elementType="Argument">
            <stringProp name="Argument.name">CURR_DATETIME</stringProp>
            <stringProp name="Argument.value">CURRENT_TIMESTAMP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBDAILECT" elementType="Argument">
            <stringProp name="Argument.name">DBDAILECT</stringProp>
            <stringProp name="Argument.value">ORACL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">enable this to test different server (by overriding Test plan level values)</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Server details_mssqlemm" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PROTOCOL</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVER_HOST</stringProp>
            <stringProp name="Argument.value">mssqlemm.platform.kony.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PORT</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_CONTEXT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_CONTEXT</stringProp>
            <stringProp name="Argument.value">emm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_CHECK_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_CHECK_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_check</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_LOGOUT_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_LOGOUT_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_logout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">MGMT_USERNAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">MGMT_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROVISION_PORT" elementType="Argument">
            <stringProp name="Argument.name">PROVISION_PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_HOSTNAME</stringProp>
            <stringProp name="Argument.value">mssqlemm.platform.kony.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PORT" elementType="Argument">
            <stringProp name="Argument.name">RDS_PORT</stringProp>
            <stringProp name="Argument.value">3306</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_DB_NAME</stringProp>
            <stringProp name="Argument.value">emmdb2530</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_USERNAME</stringProp>
            <stringProp name="Argument.value">dbclient</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">RDS_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_URL" elementType="Argument">
            <stringProp name="Argument.name">RDS_URL</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://10.11.11.74:3306/emmdb_2530</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DRIVER_CLASS" elementType="Argument">
            <stringProp name="Argument.name">RDS_DRIVER_CLASS</stringProp>
            <stringProp name="Argument.value">javax.sql.DataSource</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CURR_DATETIME" elementType="Argument">
            <stringProp name="Argument.name">CURR_DATETIME</stringProp>
            <stringProp name="Argument.value">CURRENT_TIMESTAMP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBDAILECT" elementType="Argument">
            <stringProp name="Argument.name">DBDAILECT</stringProp>
            <stringProp name="Argument.value">MYSQL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">enable this to test different server (by overriding Test plan level values)</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Server details_localhost" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PROTOCOL</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVER_HOST</stringProp>
            <stringProp name="Argument.value">local.konylabs.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_CONTEXT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_CONTEXT</stringProp>
            <stringProp name="Argument.value">emm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_CHECK_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_CHECK_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_check</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_LOGOUT_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_LOGOUT_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_logout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">MGMT_USERNAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">MGMT_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROVISION_PORT" elementType="Argument">
            <stringProp name="Argument.name">PROVISION_PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_HOSTNAME</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PORT" elementType="Argument">
            <stringProp name="Argument.name">RDS_PORT</stringProp>
            <stringProp name="Argument.value">3306</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_DB_NAME</stringProp>
            <stringProp name="Argument.value">emm2566</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_USERNAME</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">RDS_PASSWORD</stringProp>
            <stringProp name="Argument.value">venugopal</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_URL" elementType="Argument">
            <stringProp name="Argument.name">RDS_URL</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://localhost:3306/emm2566</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DRIVER_CLASS" elementType="Argument">
            <stringProp name="Argument.name">RDS_DRIVER_CLASS</stringProp>
            <stringProp name="Argument.value">javax.sql.DataSource</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CURR_DATETIME" elementType="Argument">
            <stringProp name="Argument.name">CURR_DATETIME</stringProp>
            <stringProp name="Argument.value">CURRENT_TIMESTAMP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">enable this to test different server (by overriding Test plan level values)</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Server details_Oracle" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SERVER_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PROTOCOL</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">SERVER_HOST</stringProp>
            <stringProp name="Argument.value">emml11.konylabs.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_PORT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_PORT</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVER_CONTEXT" elementType="Argument">
            <stringProp name="Argument.name">SERVER_CONTEXT</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_CHECK_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_CHECK_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_check</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SPRING_SECURITY_LOGOUT_URI" elementType="Argument">
            <stringProp name="Argument.name">SPRING_SECURITY_LOGOUT_URI</stringProp>
            <stringProp name="Argument.value">j_spring_security_logout</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">MGMT_USERNAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MGMT_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">MGMT_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROVISION_PORT" elementType="Argument">
            <stringProp name="Argument.name">PROVISION_PORT</stringProp>
            <stringProp name="Argument.value">8443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_HOSTNAME</stringProp>
            <stringProp name="Argument.value">10.11.12.182</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PORT" elementType="Argument">
            <stringProp name="Argument.name">RDS_PORT</stringProp>
            <stringProp name="Argument.value">1521</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_DB_NAME</stringProp>
            <stringProp name="Argument.value">konydb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_USERNAME" elementType="Argument">
            <stringProp name="Argument.name">RDS_USERNAME</stringProp>
            <stringProp name="Argument.value">emm3005</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">RDS_PASSWORD</stringProp>
            <stringProp name="Argument.value">kony123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_URL" elementType="Argument">
            <stringProp name="Argument.name">RDS_URL</stringProp>
            <stringProp name="Argument.value">jdbc:oracle:thin:@10.11.12.182:1521:konydb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RDS_DRIVER_CLASS" elementType="Argument">
            <stringProp name="Argument.name">RDS_DRIVER_CLASS</stringProp>
            <stringProp name="Argument.value">oracle.jdbc.driver.OracleDriver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CURR_DATETIME" elementType="Argument">
            <stringProp name="Argument.name">CURR_DATETIME</stringProp>
            <stringProp name="Argument.value">SYSDATE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">enable this to test different server (by overriding Test plan level values)</stringProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults - EMM Server details" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${SERVER_HOST}</stringProp>
        <stringProp name="HTTPSampler.port">${SERVER_PORT}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">${SERVER_PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="user setup variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="responseMessage" elementType="Argument">
            <stringProp name="Argument.name">responseMessage</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hasCommands" elementType="Argument">
            <stringProp name="Argument.name">hasCommands</stringProp>
            <stringProp name="Argument.value">true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">these has to be in another config, as to make use of variables in another variables (using __V(..) )</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="virtual devices setup variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="deviceId" elementType="Argument">
            <stringProp name="Argument.name">deviceId</stringProp>
            <stringProp name="Argument.value">357138057868021</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DeviceIMEI" elementType="Argument">
            <stringProp name="Argument.name">DeviceIMEI</stringProp>
            <stringProp name="Argument.value">357138057868021</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MDM_DEVICE_ID" elementType="Argument">
            <stringProp name="Argument.name">MDM_DEVICE_ID</stringProp>
            <stringProp name="Argument.value">1009</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Enroll_req_id" elementType="Argument">
            <stringProp name="Argument.name">Enroll_req_id</stringProp>
            <stringProp name="Argument.value">10009</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Server Paths" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="MGMT_REST_PATH" elementType="Argument">
            <stringProp name="Argument.name">MGMT_REST_PATH</stringProp>
            <stringProp name="Argument.value">${__V(${SERVER_CONTEXT})}/mgmt/rest</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ACCOUNTS_REST_PATH" elementType="Argument">
            <stringProp name="Argument.name">ACCOUNTS_REST_PATH</stringProp>
            <stringProp name="Argument.value">${__V(${SERVER_CONTEXT})}/accounts/rest</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">these has to be in another config, as to make use of variables in another variables (using __V(..) )</stringProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager - application/x-www-form-urlencoded" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">*/*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-Requested-With</stringProp>
            <stringProp name="Header.value">XMLHttpRequest</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager - jsession, ..." enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">jdbc</stringProp>
        <stringProp name="dbUrl">${RDS_URL}</stringProp>
        <stringProp name="driver">${RDS_DRIVER_CLASS}</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${RDS_PASSWORD}</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${RDS_USERNAME}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\kh1783\Downloads\RulebasedComplianceScripts.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1401193095000</longProp>
        <longProp name="ThreadGroup.end_time">1401193095000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Device" enabled="true"/>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="MySql  Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${DBDAILECT}&quot; == &quot;MYSQL&quot; || &quot;${DBDAILECT}&quot; == &quot;ORACLE&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_device_details" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO mdm_device_details (mdm_device_id, mdm_kpns_id, push_magic_token, mdm_profile_name, unlock_token, ios_topic, memory_available, memory_total, model_number, model_name, os_version, phone_no, cur_carrier, cur_network, home_carrier, home_network, wifi_mac, bluetooth_mac, sim_id, agent_app_id, battery_level, create_timestamp, update_timestamp, create_user_id, create_usr_id_pk, update_user_id, update_usr_id_pk, compliance_state, jailbroken, is_supervised_ios_device, hardware_encryption, agent_version, exchg_email_status, winph8_nonce, winph_exchg_id, last_known_geofence, last_sync, device_ping_count, winph8_activesync_guid, password_compliance, device_serial_no, screen_size, in_roaming, winph8_enrollment_id, is_voice_roaming, is_data_roaming, is_device_locator_enabled, is_dnd_in_effect, is_itunes_account_active, is_personal_hotspot_enabled, is_safe_enabled, call_capture, sms_capture, mms_block_state, sms_block_state, cert_list, safe_device_time) 
VALUES(&apos;1009&apos;,&apos;&apos;,&apos;NA&apos;,NULL,NULL,&apos;NA&apos;,&apos;7,217MB&apos;,&apos;9,149MB&apos;,NULL,&apos;GT-I9500&apos;,&apos;Android 4.4.2&apos;,&apos;&apos;,&apos;Airtel&apos;,&apos;15&apos;,&apos;airtel&apos;,NULL,&apos;NA&apos;,&apos;NA&apos;,&apos;NA&apos;,&apos;NA&apos;,&apos;94&apos;,${CURR_DATETIME},${CURR_DATETIME},NULL,NULL,NULL,NULL,&apos;COMPLIANT&apos;,&apos;N&apos;,&apos;N&apos;,&apos;true&apos;,&apos;Android 4.4.2&apos;,NULL,NULL,NULL,NULL,${CURR_DATETIME},NULL,NULL,&apos;0&apos;,&apos;4d00b61838503093&apos;,&apos;1080x1920&apos;,&apos;0&apos;,NULL,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;1&apos;,&apos;0&apos;,&apos;0&apos;,&apos;1&apos;,&apos;1&apos;,&apos;[\&quot;1234\&quot;,\&quot;4567\&quot;]&apos;,&apos;null&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_user_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO mdm_user_device (mdm_usr_device_id, usr_id, user_id_pk, mdm_device_id, mdm_kony_device_id, mdm_status, mdm_platform_id, create_timestamp, update_timestamp) 
VALUES(&apos;1009&apos;,&apos;admin&apos;,&apos;7485849707619549186&apos;,&apos;357138057868021&apos;,&apos;357138057868008&apos;,&apos;ENROLLED&apos;,&apos;3331&apos;,NULL,NULL)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_enroll_request" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO mdm_enroll_request (id, user_id, user_id_pk, email, personal_email, phoneno, ownership, email_notification, platform_id, profile_id, comments, status, req_type, errorinfo, registration_date, expires_on, allow_device_flag, created_timestamp, create_usr_id, create_usr_id_pk, device_id, device_reg_timestamp, domain, device_name, device_imei_number, device_model, device_vendor) 
VALUES(&apos;10009&apos;,&apos;admin&apos;,&apos;7485849707619549186&apos;,&apos;admin@kony.com&apos;,NULL,&apos;0&apos;,&apos;Employee&apos;,&apos;User&apos;,&apos;3331&apos;,&apos;1&apos;,NULL,&apos;ENROLLED&apos;,&apos;E&apos;,NULL,${CURR_DATETIME},${CURR_DATETIME},&apos;1&apos;,${CURR_DATETIME},&apos;safe&apos;,NULL,&apos;357138057868021&apos;,NULL,&apos;&apos;,&apos;admin &apos;&apos;s ANDROID&apos;,&apos;357138057868021&apos;,NULL,NULL)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO mdm_device (mdm_device_id, device_id, device_reg_id, device_platform, mdm_device_platform_id, imei_no, icc_id, kony_device_id, kpns_device_status, mdm_enroll_id, serial_no, device_vendor, mdm_enroll_status, create_timestamp, update_timestamp, create_user_id, create_usr_id_pk, update_user_id, update_usr_id_pk) 
VALUES(&apos;1009&apos;,&apos;357138057868021&apos;,&apos;&apos;,&apos;ANDROID&apos;,&apos;3331&apos;,&apos;357138057868021&apos;,&apos;89914905040850692854&apos;,&apos;357138057868021&apos;,NULL,&apos;10009&apos;,&apos;357138057868021&apos;,&apos;samsung&apos;,&apos;ENROLLED&apos;,${CURR_DATETIME},${CURR_DATETIME},NULL,NULL,NULL,NULL)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="MSSql  Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${DBDAILECT}&quot; == &quot;MSSQL&quot; </stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_device_details" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO emm.mdm_device_details (mdm_device_id, mdm_kpns_id, push_magic_token, mdm_profile_name, unlock_token, ios_topic, memory_available, memory_total, model_number, model_name, os_version, phone_no, cur_carrier, cur_network, home_carrier, home_network, wifi_mac, bluetooth_mac, sim_id, agent_app_id, battery_level, create_timestamp, update_timestamp, create_user_id, create_usr_id_pk, update_user_id, update_usr_id_pk, compliance_state, jailbroken, is_supervised_ios_device, hardware_encryption, agent_version, exchg_email_status, winph8_nonce, winph_exchg_id, last_known_geofence, last_sync, device_ping_count, winph8_activesync_guid, password_compliance, device_serial_no, screen_size, in_roaming, winph8_enrollment_id, is_voice_roaming, is_data_roaming, is_device_locator_enabled, is_dnd_in_effect, is_itunes_account_active, is_personal_hotspot_enabled, is_safe_enabled, call_capture, sms_capture, mms_block_state, sms_block_state, cert_list, safe_device_time) 
VALUES(&apos;1009&apos;,&apos;&apos;,&apos;NA&apos;,NULL,NULL,&apos;NA&apos;,&apos;7,217MB&apos;,&apos;9,149MB&apos;,NULL,&apos;GT-I9500&apos;,&apos;Android 4.4.2&apos;,&apos;&apos;,&apos;Airtel&apos;,&apos;15&apos;,&apos;airtel&apos;,NULL,&apos;NA&apos;,&apos;NA&apos;,&apos;NA&apos;,&apos;NA&apos;,&apos;94&apos;,${CURR_DATETIME},${CURR_DATETIME},NULL,NULL,NULL,NULL,&apos;COMPLIANT&apos;,&apos;N&apos;,&apos;N&apos;,&apos;true&apos;,&apos;Android 4.4.2&apos;,NULL,NULL,NULL,NULL,${CURR_DATETIME},NULL,NULL,&apos;0&apos;,&apos;4d00b61838503093&apos;,&apos;1080x1920&apos;,&apos;0&apos;,NULL,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;0&apos;,&apos;1&apos;,&apos;0&apos;,&apos;0&apos;,&apos;1&apos;,&apos;1&apos;,&apos;[\&quot;1234\&quot;,\&quot;4567\&quot;]&apos;,&apos;null&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_user_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO emm.mdm_user_device (mdm_usr_device_id, usr_id, user_id_pk, mdm_device_id, mdm_kony_device_id, mdm_status, mdm_platform_id, create_timestamp, update_timestamp) 
VALUES(&apos;1009&apos;,&apos;admin&apos;,&apos;7485849707619549186&apos;,&apos;357138057868021&apos;,&apos;357138057868008&apos;,&apos;ENROLLED&apos;,&apos;3331&apos;,NULL,NULL)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_enroll_request" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO emm.mdm_enroll_request (id, user_id, user_id_pk, email, personal_email, phoneno, ownership, email_notification, platform_id, profile_id, comments, status, req_type, errorinfo, registration_date, expires_on, allow_device_flag, created_timestamp, create_usr_id, create_usr_id_pk, device_id, device_reg_timestamp, domain, device_name, device_imei_number, device_model, device_vendor) 
VALUES(&apos;10009&apos;,&apos;admin&apos;,&apos;7485849707619549186&apos;,&apos;admin@kony.com&apos;,NULL,&apos;0&apos;,&apos;Employee&apos;,&apos;User&apos;,&apos;3331&apos;,&apos;1&apos;,NULL,&apos;ENROLLED&apos;,&apos;E&apos;,NULL,${CURR_DATETIME},${CURR_DATETIME},&apos;1&apos;,${CURR_DATETIME},&apos;safe&apos;,NULL,&apos;357138057868021&apos;,NULL,&apos;&apos;,&apos;admin &apos;&apos;s ANDROID&apos;,&apos;357138057868021&apos;,NULL,NULL)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; Set_Identity_ON" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">SET IDENTITY_INSERT emm.mdm_device ON</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; JDBC Request - virtual device - mdm_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO emm.mdm_device (mdm_device_id, device_id, device_reg_id, device_platform, mdm_device_platform_id, imei_no, icc_id, kony_device_id, kpns_device_status, mdm_enroll_id, serial_no, device_vendor, mdm_enroll_status, create_timestamp, update_timestamp, create_user_id, create_usr_id_pk, update_user_id, update_usr_id_pk) 
VALUES(&apos;1009&apos;,&apos;357138057868021&apos;,&apos;&apos;,&apos;ANDROID&apos;,&apos;3331&apos;,&apos;357138057868021&apos;,&apos;89914905040850692854&apos;,&apos;357138057868021&apos;,NULL,&apos;10009&apos;,&apos;357138057868021&apos;,&apos;samsung&apos;,&apos;ENROLLED&apos;,${CURR_DATETIME},${CURR_DATETIME},NULL,NULL,NULL,NULL)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="setup &gt;&gt; Set_Identity_OFF" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">SET IDENTITY_INSERT emm.mdm_device OFF</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1397478240000</longProp>
        <longProp name="ThreadGroup.end_time">1397478240000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Android" enabled="true"/>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login Controller" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - Login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">j_username=${MGMT_USERNAME}&amp;j_password=${MGMT_PASSWORD}&amp;j_source=&amp;j_domain=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/mgmt/${SPRING_SECURITY_CHECK_URI}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager (login form post)" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1448719514">/login</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Successful authenticated response URL should not contain &apos;login&apos;</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GETSynchToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/mgmt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager - JSON, XMLHttpRequest" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="ResponseCode" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
              <stringProp name="XPathExtractor.default">null</stringProp>
              <stringProp name="XPathExtractor.refname">csrfToken1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">//input[@id = &quot;tokenKey&quot;]/@value</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">true</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
              <stringProp name="Scope.variable">csrfToken</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </XPathExtractor>
            <hashTree/>
          </hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
              <stringProp name="TestPlan.comments">execute pending commands</stringProp>
              <stringProp name="WhileController.condition">${hasCommands}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                  <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">3213</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="Scope.variable"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                  <stringProp name="VAR">payload</stringProp>
                  <stringProp name="JSONPATH">response</stringProp>
                  <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                  <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">3213</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">java</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey"></stringProp>
                  <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">false</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateDeviceSet" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">deviceSetName=complianceDeviceSet&amp;deviceSetType=2&amp;description=&amp;copyDeviceSetId=&amp;_synchronizerToken=${csrfToken1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">DeviceSetId</stringProp>
              <stringProp name="RegexExtractor.regex">(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateDeviceSet" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">devicesetName=deviceset&amp;deviceSetDesc=&amp;deviceSetId=${DeviceSetId}&amp;deviceSetName=deviceset&amp;deviceSetModified=1&amp;segmentQueryTemp=&amp;segmentQuery=1&amp;deviceSetType=Dynamic&amp;lastrowId=0&amp;selPolicyIds=&amp;tabId=PARAMETER&amp;isValidExpression=&amp;totalRows=0&amp;type=&amp;pagetype=&amp;paramsSize=1&amp;deviceParameterName1=1&amp;attributeName1=IMEI&amp;attributeOperator1=CONTAINS&amp;attributeValue1=${DeviceIMEI}&amp;records_per_page=10&amp;records_per_page_curr=10&amp;deviceName=&amp;userName=&amp;ownership=&amp;imei=&amp;osVersion=&amp;phoneNumberSel=&amp;lastCheckIn=&amp;segmentQuery=1&amp;actionType=saveAndSubmit&amp;currentState=DRAFT&amp;currentStatus=UNPUBLISHED</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/saveDeviceSetDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishDeviceSet" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/checkValidAction?deviceSetId=${DeviceSetId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;0.7058768487510755&amp;_=1398164584719</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;responseMessage&quot;,&quot;test&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
              <stringProp name="TestPlan.comments">execute pending commands</stringProp>
              <stringProp name="WhileController.condition">${hasCommands}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                  <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">3213</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="Scope.variable"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                  <stringProp name="VAR">payload</stringProp>
                  <stringProp name="JSONPATH">response</stringProp>
                  <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                  <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">3213</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">java</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey"></stringProp>
                  <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateCpPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">actiontype=CreateAndEdit&amp;policyName=compliancePolicy&amp;policyType=8&amp;description=&amp;_synchronizerToken=${csrfToken1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">CreateCpPolicy</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">CompliancePolicyId</stringProp>
              <stringProp name="RegexExtractor.regex">policyId=(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">3213</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateAppPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">actiontype=CreateAndEdit&amp;policyName=AppPolicy&amp;policyType=11&amp;description=&amp;_synchronizerToken=${csrfToken1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">AppPolicyId</stringProp>
              <stringProp name="RegexExtractor.regex">policyId=(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">3213</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePassCodePolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">actiontype=CreateAndEdit&amp;policyName=PasscodePolicy&amp;policyType=1&amp;description=&amp;_synchronizerToken=${csrfToken1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">PasscodePolicyId</stringProp>
              <stringProp name="RegexExtractor.regex">policyId=(.*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">3213</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">props.put(&quot;CompliancePolicyId&quot;,vars.get(&quot;CompliancePolicyId&quot;));
props.put(&quot;AppPolicyId&quot;,vars.get(&quot;AppPolicyId&quot;));
props.put(&quot;PasscodePolicyId&quot;,vars.get(&quot;PasscodePolicyId&quot;));
props.put(&quot;DeviceSetId&quot;,vars.get(&quot;DeviceSetId&quot;));
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddPolicyApp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">policyId=${AppPolicyId}&amp;appId=in.smartwebs.easy_irctc&amp;bundleId=in.smartwebs.easy_irctc&amp;appType=GOOGLE&amp;actionType=BLACKLIST&amp;searchTerm=Easy+IRCTC&amp;platform=ANDROID</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/addPolicyApp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateAppPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">actiontype=SaveAndSubmit&amp;policyType=MANDATORY_APPS&amp;policyId=${AppPolicyId}&amp;platformId=&amp;REQUIRED_APPS=YES&amp;REQUIRED_APPS_ANDROID=true&amp;APP_RESTRICTIONS=NONE&amp;APP_RESTRICTIONS_ANDROID=BLACKLIST&amp;ALLOW_APP_INSTALLATION_ANDROID=true&amp;searchTextTemp=&amp;whiteListCount=0&amp;blackListCount=0&amp;whiteListAndroidCount=0&amp;blackListAndroidCount=1&amp;currentPageNo=&amp;policydesc=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/saveParams?rnd=0.5868240354823722</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishAppPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">policyId=${AppPolicyId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;policyTypeId=11&amp;comments=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/checkValidAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdatePasscodePolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">actiontype=SaveAndSubmit&amp;policyType=PASSCODE_POLICY&amp;policyId=${PasscodePolicyId}&amp;platformId=&amp;policydesc=&amp;IOS_REQUIRE_PASSCODE=false&amp;AND_REQUIRE_PASSCODE=true&amp;PASSCODE_CONTENT=ANY&amp;MAX_PASSCODE_AGE_DAYS=30&amp;MAX_PASSCODE_AGE_ANDROID=1&amp;ALLOW_IDLE_TIME_BEFORE_UNLOCK=0&amp;AND_UNIQUE_PASSCODES_BEFORE_REUSE=3&amp;FAILED_ATTEMPTS_LIMIT=3&amp;REQUIRE_STORAGE_ENCRYPTION=NO&amp;WIN6_ENFORCE_PASSCODE=false&amp;WIN8_ENFORCE_PASSCODE=false&amp;AND_MIN_PASSODE_LENGTH=0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/saveParams?rnd=0.5868240354823722</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishPasscodePolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">policyId=${PasscodePolicyId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;policyTypeId=1&amp;comments=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/checkValidAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfoRequestId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/devicemgmt/changeMDMDeviceStatus.htm?actionType=DEVICE_INFO&amp;deviceId=${deviceId}&amp;platformName=Android&amp;rnd=0.8383278721840193&amp;deviceAlias=admin%20GT-I9500&amp;loggedInUser=admin&amp;userid=7485849707619549186&amp;_=1400238613979&amp;_synchronizerToken=${csrfToken1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
              <stringProp name="VAR">requestId</stringProp>
              <stringProp name="JSONPATH">requestId</stringProp>
              <stringProp name="DEFAULT">1000</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
          <hashTree>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">false</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
              <stringProp name="TestPlan.comments">execute pending commands</stringProp>
              <stringProp name="WhileController.condition">${hasCommands}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                  <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">3213</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="Scope.variable"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                  <stringProp name="VAR">payload</stringProp>
                  <stringProp name="JSONPATH">response</stringProp>
                  <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                  <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">3213</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                </RegexExtractor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">java</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey"></stringProp>
                  <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Compliance" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">actiontype=SaveAndSubmit&amp;policyType=COMPLAINCE_ACTIONS&amp;policyId=${CompliancePolicyId}&amp;platformId=&amp;policydesc=&amp;iosSimpleparamsConfigured=false&amp;IOS_FIELDSET=&amp;IOS_WIFI_ACCESS_POLICY_ALERT=true&amp;IOS_WIFI_ACCESS_POLICY_HIDDEN=1&amp;IOS_WIFI_ACCESS_POLICY_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_ENROLLMENT_TRIGGER_REMOVE_CONTROL=false&amp;IOS_ENFORCE_ENROLLMENT_EMAIL=false&amp;IOS_ENFORCE_ENROLLMENT_HIDDEN=1&amp;IOS_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=false&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;JAILBROKEN_IOS_POLICY_ALERT=true&amp;IOS_JAILBROKEN_IOS_POLICY_HIDDEN=1&amp;IOS_JAILBROKEN_IOS_POLICY_ENFORCE-1=1&amp;ios_rulesSize=1&amp;ios_paramsSize=1&amp;iosComplexparamsConfigured=false&amp;iosConditionNumber1=1&amp;ios_compParam1=IOS_WIFI_ACCESS_POLICY&amp;ios_compValue1=Restrict+to+assigned+only&amp;ios_rulesSize=0&amp;ios_ruleName-1=&amp;ios_conditionNum-1=&amp;ios_rule_cond-1=&amp;ios_enfAction-1=1&amp;ios_voilationMsg-1=&amp;modtype=value1&amp;andSimpleparamsConfigured=true&amp;AND_FIELDSET=&amp;AND_WIFI_ACCESS_POLICY_ALERT=true&amp;AND_WIFI_ACCESS_POLICY_HIDDEN=1&amp;AND_WIFI_ACCESS_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_ENROLLMENT_TRIGGER_ACTION_REMOVE_CONTROL=false&amp;AND_ENFORCE_ENROLLMENT_EMAIL=false&amp;AND_ENFORCE_ENROLLMENT_HIDDEN=1&amp;AND_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;AND_FIELDSET=&amp;AND_ENFORCE_MINIMUM_OS_VERSION=&amp;AND_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;AND_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_PASSWORD_COMPLIANCE_ENFORCE_PASSCODE=true&amp;AND_PASSWORD_COMPLIANCE_HIDDEN=1&amp;AND_PASSWORD_COMPLIANCE_ENFORCE-1=4&amp;AND_FIELDSET=&amp;AND_ROOTED_ANDROID_POLICY_ALLOW=true&amp;AND_ROOTED_ANDROID_POLICY_HIDDEN=1&amp;AND_ROOTED_ANDROID_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=true&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=1&amp;and_rulesSize=1&amp;and_paramsSize=1&amp;andComplexparamsConfigured=false&amp;andConditionNumber1=1&amp;and_compParam1=AND_PASSWORD_COMPLIANCE&amp;and_compValue1=Enforce+Password+Compliance&amp;and_rulesSize=0&amp;and_ruleName-1=&amp;and_conditionNum-1=&amp;and_rule_cond-1=&amp;and_enfAction-1=1&amp;and_voilationMsg-1=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/saveParams?rnd=0.5868240354823722</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">policyId=${CompliancePolicyId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;policyTypeId=8&amp;comments=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/checkValidAction</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssignPolicies" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">comments=&amp;deviceSetId=${DeviceSetId}&amp;totalRows=9&amp;totalRowsTemp=9&amp;policyName1=${PasscodePolicyId}&amp;geoFence1=&amp;timeFence1=&amp;policyName2=&amp;geoFence2=&amp;timeFence2=&amp;policyName3=&amp;geoFence3=&amp;timeFence3=&amp;policyName4=&amp;geoFence4=&amp;timeFence4=&amp;policyName5=&amp;geoFence5=&amp;timeFence5=&amp;policyName6=&amp;geoFence6=&amp;timeFence6=&amp;policyName7=${CompliancePolicyId}&amp;geoFence7=&amp;allowGeoFence7=true&amp;timeFence7=&amp;allowTimeFence7=true&amp;policyName8=${AppPolicyId}&amp;geoFence8=&amp;timeFence8=&amp;policyName9=&amp;geoFence9=&amp;timeFence9=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/applyPolicyDetails</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                <stringProp name="VAR">actual</stringProp>
                <stringProp name="JSONPATH">response</stringProp>
                <stringProp name="DEFAULT">payload</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Compare Jsons" enabled="true">
                <stringProp name="TestPlan.comments">test</stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">     String expected=&quot;{\&quot;commandType\&quot;:\&quot;DEVICE_POLICY_PUSH\&quot;,\&quot;correlationId\&quot;:\&quot;1621\&quot;,\&quot;policyId\&quot;:0,\&quot;policyName\&quot;:\&quot;440\&quot;,\&quot;policyStatus\&quot;:null,\&quot;PASSCODE_POLICY\&quot;:{\&quot;AND_MIN_PASSODE_LENGTH\&quot;:\&quot;0\&quot;,\&quot;PASSCODE_CONTENT\&quot;:\&quot;ANY\&quot;,\&quot;ALLOW_IDLE_TIME_BEFORE_UNLOCK\&quot;:\&quot;0\&quot;,\&quot;FAILED_ATTEMPTS_LIMIT\&quot;:\&quot;3\&quot;,\&quot;AND_REQUIRE_PASSCODE\&quot;:\&quot;true\&quot;,\&quot;AND_UNIQUE_PASSCODES_BEFORE_REUSE\&quot;:\&quot;3\&quot;,\&quot;REQUIRE_STORAGE_ENCRYPTION\&quot;:\&quot;NO\&quot;,\&quot;MAX_PASSCODE_AGE_DAYS\&quot;:\&quot;30\&quot;}}&quot;;
     vars.put(&quot;isSuccess&quot;, &quot;false&quot;);
	String actual = vars.get(&quot;actual&quot;); 
	Map obj1 = new com.google.gson.Gson().fromJson(expected, Map.class);
	Map obj2 = new com.google.gson.Gson().fromJson(actual, Map.class);

	obj1.remove(&quot;correlationId&quot;);
		obj1.remove(&quot;policyId&quot;);
		obj1.remove(&quot;policyName&quot;);
		obj1.remove(&quot;policyStatus&quot;);
		
		obj2.remove(&quot;correlationId&quot;);
		obj2.remove(&quot;policyId&quot;);
		obj2.remove(&quot;policyName&quot;);
		obj2.remove(&quot;policyStatus&quot;);
		
	if(obj1.equals(obj2)){
		vars.put(&quot;isSuccess&quot;, &quot;true&quot;);
	}</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">isSuccess</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}&amp;responseCode=${isSuccess}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with Min OS violation, but passcode compliant and App Compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with passcode violation but App compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Passcode )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with App violation ,but passcode compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Unauthorized App Usage )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with App violation and passcode violation" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Unauthorized App Usage, Passcode )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Complex Compliance with single rule" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">actiontype=SaveAndSubmit&amp;policyType=COMPLAINCE_ACTIONS&amp;policyId=${CompliancePolicyId}&amp;platformId=&amp;policydesc=&amp;iosSimpleparamsConfigured=false&amp;IOS_FIELDSET=&amp;IOS_WIFI_ACCESS_POLICY_ALERT=true&amp;IOS_WIFI_ACCESS_POLICY_HIDDEN=1&amp;IOS_WIFI_ACCESS_POLICY_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_ENROLLMENT_TRIGGER_REMOVE_CONTROL=false&amp;IOS_ENFORCE_ENROLLMENT_EMAIL=false&amp;IOS_ENFORCE_ENROLLMENT_HIDDEN=1&amp;IOS_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=false&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;JAILBROKEN_IOS_POLICY_ALERT=true&amp;IOS_JAILBROKEN_IOS_POLICY_HIDDEN=1&amp;IOS_JAILBROKEN_IOS_POLICY_ENFORCE-1=1&amp;ios_rulesSize=1&amp;ios_paramsSize=1&amp;iosComplexparamsConfigured=false&amp;iosConditionNumber1=1&amp;ios_compParam1=IOS_WIFI_ACCESS_POLICY&amp;ios_compValue1=Restrict+to+assigned+only&amp;ios_rulesSize=0&amp;ios_ruleName-1=&amp;ios_conditionNum-1=&amp;ios_rule_cond-1=&amp;ios_enfAction-1=1&amp;ios_voilationMsg-1=&amp;modtype=value2&amp;andSimpleparamsConfigured=false&amp;AND_FIELDSET=&amp;AND_WIFI_ACCESS_POLICY_ALERT=true&amp;AND_WIFI_ACCESS_POLICY_HIDDEN=1&amp;AND_WIFI_ACCESS_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_ENROLLMENT_TRIGGER_ACTION_REMOVE_CONTROL=false&amp;AND_ENFORCE_ENROLLMENT_EMAIL=false&amp;AND_ENFORCE_ENROLLMENT_HIDDEN=1&amp;AND_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;AND_FIELDSET=&amp;AND_ENFORCE_MINIMUM_OS_VERSION=&amp;AND_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;AND_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_PASSWORD_COMPLIANCE_ENFORCE_PASSCODE=false&amp;AND_PASSWORD_COMPLIANCE_HIDDEN=1&amp;AND_PASSWORD_COMPLIANCE_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ROOTED_ANDROID_POLICY_ALLOW=true&amp;AND_ROOTED_ANDROID_POLICY_HIDDEN=1&amp;AND_ROOTED_ANDROID_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=false&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=3&amp;and_rulesSize=1&amp;and_paramsSize=3&amp;andComplexparamsConfigured=true&amp;andConditionNumber1=1&amp;and_compParam1=AND_ENFORCE_APPLICATION&amp;and_compValue1=Enforce+App+Policy&amp;andConditionNumber2=2&amp;and_compParam2=AND_PASSWORD_COMPLIANCE&amp;and_compValue2=Enforce+Password+Compliance&amp;andConditionNumber3=3&amp;and_compParam3=AND_ENFORCE_MIN_OS_VERSION&amp;and_compValue3=4.3&amp;and_rulesSize=0&amp;and_ruleName-1=Rule1&amp;and_conditionNum-1=&amp;and_rule_cond-1=(+1+AND+2+)+OR+(+1+AND+3+)&amp;clear_filterss-1=&amp;and_enfAction-1=4&amp;and_voilationMsg-1=Android+rule1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/saveParams?rnd=0.5868240354823722</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">policyId=${CompliancePolicyId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;policyTypeId=8&amp;comments=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/checkValidAction</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssignPolicies" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">comments=&amp;deviceSetId=${DeviceSetId}&amp;totalRows=9&amp;totalRowsTemp=9&amp;policyName1=${PasscodePolicyId}&amp;geoFence1=&amp;timeFence1=&amp;policyName2=&amp;geoFence2=&amp;timeFence2=&amp;policyName3=&amp;geoFence3=&amp;timeFence3=&amp;policyName4=&amp;geoFence4=&amp;timeFence4=&amp;policyName5=&amp;geoFence5=&amp;timeFence5=&amp;policyName6=&amp;geoFence6=&amp;timeFence6=&amp;policyName7=${CompliancePolicyId}&amp;geoFence7=&amp;allowGeoFence7=true&amp;timeFence7=&amp;allowTimeFence7=true&amp;policyName8=${AppPolicyId}&amp;geoFence8=&amp;timeFence8=&amp;policyName9=&amp;geoFence9=&amp;timeFence9=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/applyPolicyDetails</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                <stringProp name="VAR">actual</stringProp>
                <stringProp name="JSONPATH">response</stringProp>
                <stringProp name="DEFAULT">payload</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Compare Jsons" enabled="true">
                <stringProp name="TestPlan.comments">test</stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">     String expected=&quot;{\&quot;commandType\&quot;:\&quot;DEVICE_POLICY_PUSH\&quot;,\&quot;correlationId\&quot;:\&quot;1621\&quot;,\&quot;policyId\&quot;:0,\&quot;policyName\&quot;:\&quot;440\&quot;,\&quot;policyStatus\&quot;:null,\&quot;PASSCODE_POLICY\&quot;:{\&quot;AND_MIN_PASSODE_LENGTH\&quot;:\&quot;0\&quot;,\&quot;PASSCODE_CONTENT\&quot;:\&quot;ANY\&quot;,\&quot;ALLOW_IDLE_TIME_BEFORE_UNLOCK\&quot;:\&quot;0\&quot;,\&quot;FAILED_ATTEMPTS_LIMIT\&quot;:\&quot;3\&quot;,\&quot;AND_REQUIRE_PASSCODE\&quot;:\&quot;true\&quot;,\&quot;AND_UNIQUE_PASSCODES_BEFORE_REUSE\&quot;:\&quot;3\&quot;,\&quot;REQUIRE_STORAGE_ENCRYPTION\&quot;:\&quot;NO\&quot;,\&quot;MAX_PASSCODE_AGE_DAYS\&quot;:\&quot;30\&quot;}}&quot;;
     vars.put(&quot;isSuccess&quot;, &quot;false&quot;);
	String actual = vars.get(&quot;actual&quot;); 
	Map obj1 = new com.google.gson.Gson().fromJson(expected, Map.class);
	Map obj2 = new com.google.gson.Gson().fromJson(actual, Map.class);

	obj1.remove(&quot;correlationId&quot;);
		obj1.remove(&quot;policyId&quot;);
		obj1.remove(&quot;policyName&quot;);
		obj1.remove(&quot;policyStatus&quot;);
		
		obj2.remove(&quot;correlationId&quot;);
		obj2.remove(&quot;policyId&quot;);
		obj2.remove(&quot;policyName&quot;);
		obj2.remove(&quot;policyStatus&quot;);
		
	if(obj1.equals(obj2)){
		vars.put(&quot;isSuccess&quot;, &quot;true&quot;);
	}</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">isSuccess</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}&amp;responseCode=${isSuccess}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with all compliant Conditions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with one non-compliant condition and 2 compliant conditions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with 2 non-compliant conditions and 1 compliant condition" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with  passcode and App violation" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (compliancePolicy:Rule1 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat on Min OS and App policy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (compliancePolicy:Rule1 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat on Min os, passcode and App policy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (compliancePolicy:Rule1 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Complex Compliance with multiple rules" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">actiontype=SaveAndSubmit&amp;policyType=COMPLAINCE_ACTIONS&amp;policyId=${CompliancePolicyId}&amp;platformId=&amp;policydesc=&amp;iosSimpleparamsConfigured=false&amp;IOS_FIELDSET=&amp;IOS_WIFI_ACCESS_POLICY_ALERT=true&amp;IOS_WIFI_ACCESS_POLICY_HIDDEN=1&amp;IOS_WIFI_ACCESS_POLICY_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_ENROLLMENT_TRIGGER_REMOVE_CONTROL=false&amp;IOS_ENFORCE_ENROLLMENT_EMAIL=false&amp;IOS_ENFORCE_ENROLLMENT_HIDDEN=1&amp;IOS_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=false&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;JAILBROKEN_IOS_POLICY_ALERT=true&amp;IOS_JAILBROKEN_IOS_POLICY_HIDDEN=1&amp;IOS_JAILBROKEN_IOS_POLICY_ENFORCE-1=1&amp;ios_rulesSize=1&amp;ios_paramsSize=1&amp;iosComplexparamsConfigured=false&amp;iosConditionNumber1=1&amp;ios_compParam1=IOS_WIFI_ACCESS_POLICY&amp;ios_compValue1=Restrict+to+assigned+only&amp;ios_rulesSize=0&amp;ios_ruleName-1=&amp;ios_conditionNum-1=&amp;ios_rule_cond-1=&amp;ios_enfAction-1=1&amp;ios_voilationMsg-1=&amp;modtype=value2&amp;andSimpleparamsConfigured=false&amp;AND_FIELDSET=&amp;AND_WIFI_ACCESS_POLICY_ALERT=true&amp;AND_WIFI_ACCESS_POLICY_HIDDEN=1&amp;AND_WIFI_ACCESS_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_ENROLLMENT_TRIGGER_ACTION_REMOVE_CONTROL=false&amp;AND_ENFORCE_ENROLLMENT_EMAIL=false&amp;AND_ENFORCE_ENROLLMENT_HIDDEN=1&amp;AND_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;AND_FIELDSET=&amp;AND_ENFORCE_MINIMUM_OS_VERSION=&amp;AND_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;AND_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_PASSWORD_COMPLIANCE_ENFORCE_PASSCODE=false&amp;AND_PASSWORD_COMPLIANCE_HIDDEN=1&amp;AND_PASSWORD_COMPLIANCE_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ROOTED_ANDROID_POLICY_ALLOW=true&amp;AND_ROOTED_ANDROID_POLICY_HIDDEN=1&amp;AND_ROOTED_ANDROID_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=false&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=3&amp;and_rulesSize=2&amp;and_paramsSize=3&amp;andComplexparamsConfigured=true&amp;andConditionNumber1=1&amp;and_compParam1=AND_ENFORCE_APPLICATION&amp;and_compValue1=Enforce+App+Policy&amp;andConditionNumber2=2&amp;and_compParam2=AND_PASSWORD_COMPLIANCE&amp;and_compValue2=Enforce+Password+Compliance&amp;andConditionNumber3=3&amp;and_compParam3=AND_ENFORCE_MIN_OS_VERSION&amp;and_compValue3=4.3&amp;and_rulesSize=0&amp;and_ruleName-1=Rule1&amp;and_conditionNum-1=&amp;and_rule_cond-1=(+1+AND+2+)+OR+(+1+AND+3+)&amp;clear_filterss-1=&amp;and_enfAction-1=2&amp;and_voilationMsg-1=Android+Rule1+msg&amp;and_ruleName-2=Rule2&amp;and_conditionNum-2=&amp;and_rule_cond-2=2+AND+3&amp;clear_filterss-2=&amp;and_enfAction-2=2&amp;and_voilationMsg-2=Android+Rule2+Msg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/saveParams?rnd=0.5868240354823722</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">policyId=${CompliancePolicyId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;policyTypeId=8&amp;comments=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/checkValidAction</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssignPolicies" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">comments=&amp;deviceSetId=${DeviceSetId}&amp;totalRows=9&amp;totalRowsTemp=9&amp;policyName1=${PasscodePolicyId}&amp;geoFence1=&amp;timeFence1=&amp;policyName2=&amp;geoFence2=&amp;timeFence2=&amp;policyName3=&amp;geoFence3=&amp;timeFence3=&amp;policyName4=&amp;geoFence4=&amp;timeFence4=&amp;policyName5=&amp;geoFence5=&amp;timeFence5=&amp;policyName6=&amp;geoFence6=&amp;timeFence6=&amp;policyName7=${CompliancePolicyId}&amp;geoFence7=&amp;allowGeoFence7=true&amp;timeFence7=&amp;allowTimeFence7=true&amp;policyName8=${AppPolicyId}&amp;geoFence8=&amp;timeFence8=&amp;policyName9=&amp;geoFence9=&amp;timeFence9=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/applyPolicyDetails</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                <stringProp name="VAR">actual</stringProp>
                <stringProp name="JSONPATH">response</stringProp>
                <stringProp name="DEFAULT">payload</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Compare Jsons" enabled="true">
                <stringProp name="TestPlan.comments">test</stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">     String expected=&quot;{\&quot;commandType\&quot;:\&quot;DEVICE_POLICY_PUSH\&quot;,\&quot;correlationId\&quot;:\&quot;1621\&quot;,\&quot;policyId\&quot;:0,\&quot;policyName\&quot;:\&quot;440\&quot;,\&quot;policyStatus\&quot;:null,\&quot;PASSCODE_POLICY\&quot;:{\&quot;AND_MIN_PASSODE_LENGTH\&quot;:\&quot;0\&quot;,\&quot;PASSCODE_CONTENT\&quot;:\&quot;ANY\&quot;,\&quot;ALLOW_IDLE_TIME_BEFORE_UNLOCK\&quot;:\&quot;0\&quot;,\&quot;FAILED_ATTEMPTS_LIMIT\&quot;:\&quot;3\&quot;,\&quot;AND_REQUIRE_PASSCODE\&quot;:\&quot;true\&quot;,\&quot;AND_UNIQUE_PASSCODES_BEFORE_REUSE\&quot;:\&quot;3\&quot;,\&quot;REQUIRE_STORAGE_ENCRYPTION\&quot;:\&quot;NO\&quot;,\&quot;MAX_PASSCODE_AGE_DAYS\&quot;:\&quot;30\&quot;}}&quot;;
     vars.put(&quot;isSuccess&quot;, &quot;false&quot;);
	String actual = vars.get(&quot;actual&quot;); 
	Map obj1 = new com.google.gson.Gson().fromJson(expected, Map.class);
	Map obj2 = new com.google.gson.Gson().fromJson(actual, Map.class);

	obj1.remove(&quot;correlationId&quot;);
		obj1.remove(&quot;policyId&quot;);
		obj1.remove(&quot;policyName&quot;);
		obj1.remove(&quot;policyStatus&quot;);
		
		obj2.remove(&quot;correlationId&quot;);
		obj2.remove(&quot;policyId&quot;);
		obj2.remove(&quot;policyName&quot;);
		obj2.remove(&quot;policyStatus&quot;);
		
	if(obj1.equals(obj2)){
		vars.put(&quot;isSuccess&quot;, &quot;true&quot;);
	}</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">isSuccess</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}&amp;responseCode=${isSuccess}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with all compliant condtions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with App violation ,but passcode compliant and Min OS Compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with Min OS violation ,but passcode compliant and App compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with passcode violation ,but App Compliant and Min OS Compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with Min OS and passcode violation, but App Compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (compliancePolicy:Rule2 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with Min OS and  App violation, but passcode Compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (compliancePolicy:Rule1 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with Min OS ,  App , passcode  violation" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (compliancePolicy:Rule1, compliancePolicy:Rule2 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple and Complex rule" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">actiontype=SaveAndSubmit&amp;policyType=COMPLAINCE_ACTIONS&amp;policyId=${CompliancePolicyId}&amp;platformId=&amp;policydesc=&amp;iosSimpleparamsConfigured=false&amp;IOS_FIELDSET=&amp;IOS_WIFI_ACCESS_POLICY_ALERT=true&amp;IOS_WIFI_ACCESS_POLICY_HIDDEN=1&amp;IOS_WIFI_ACCESS_POLICY_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_ENROLLMENT_TRIGGER_REMOVE_CONTROL=false&amp;IOS_ENFORCE_ENROLLMENT_EMAIL=false&amp;IOS_ENFORCE_ENROLLMENT_HIDDEN=1&amp;IOS_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION=&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;IOS_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=false&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;IOS_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=1&amp;IOS_FIELDSET=&amp;JAILBROKEN_IOS_POLICY_ALERT=true&amp;IOS_JAILBROKEN_IOS_POLICY_HIDDEN=1&amp;IOS_JAILBROKEN_IOS_POLICY_ENFORCE-1=1&amp;ios_rulesSize=1&amp;ios_paramsSize=1&amp;iosComplexparamsConfigured=false&amp;iosConditionNumber1=1&amp;ios_compParam1=IOS_WIFI_ACCESS_POLICY&amp;ios_compValue1=Restrict+to+assigned+only&amp;ios_rulesSize=0&amp;ios_ruleName-1=&amp;ios_conditionNum-1=&amp;ios_rule_cond-1=&amp;ios_enfAction-1=1&amp;ios_voilationMsg-1=&amp;modtype=value1&amp;modtype=value2&amp;andSimpleparamsConfigured=true&amp;AND_FIELDSET=&amp;AND_WIFI_ACCESS_POLICY_ALERT=true&amp;AND_WIFI_ACCESS_POLICY_HIDDEN=1&amp;AND_WIFI_ACCESS_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_ENROLLMENT_TRIGGER_ACTION_REMOVE_CONTROL=false&amp;AND_ENFORCE_ENROLLMENT_EMAIL=false&amp;AND_ENFORCE_ENROLLMENT_HIDDEN=1&amp;AND_ENFORCE_ENROLLMENT_ENFORCE-1=1&amp;AND_FIELDSET=&amp;AND_ENFORCE_MINIMUM_OS_VERSION=4.3&amp;AND_ENFORCE_MINIMUM_OS_VERSION_HIDDEN=1&amp;AND_ENFORCE_MINIMUM_OS_VERSION_ENFORCE-1=4&amp;AND_FIELDSET=&amp;AND_PASSWORD_COMPLIANCE_ENFORCE_PASSCODE=false&amp;AND_PASSWORD_COMPLIANCE_HIDDEN=1&amp;AND_PASSWORD_COMPLIANCE_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ROOTED_ANDROID_POLICY_ALLOW=true&amp;AND_ROOTED_ANDROID_POLICY_HIDDEN=1&amp;AND_ROOTED_ANDROID_POLICY_ENFORCE-1=3&amp;AND_FIELDSET=&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_TRIGGER_ACTION=true&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_HIDDEN=1&amp;AND_ENFORCE_APPLICATION_COMPLIANCE_ENFORCE-1=7&amp;and_rulesSize=1&amp;and_paramsSize=3&amp;andComplexparamsConfigured=true&amp;andConditionNumber1=1&amp;and_compParam1=AND_ENFORCE_APPLICATION&amp;and_compValue1=Enforce+App+Policy&amp;andConditionNumber2=2&amp;and_compParam2=AND_PASSWORD_COMPLIANCE&amp;and_compValue2=Enforce+Password+Compliance&amp;andConditionNumber3=3&amp;and_compParam3=AND_ENFORCE_MIN_OS_VERSION&amp;and_compValue3=4.3&amp;and_rulesSize=0&amp;and_ruleName-1=Rule1&amp;and_conditionNum-1=&amp;and_rule_cond-1=(+1+AND+2+)+OR+(+1+AND+3+)&amp;clear_filterss-1=&amp;and_enfAction-1=3&amp;and_voilationMsg-1=Android+Rule1+msg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/saveParams?rnd=0.5868240354823722</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PublishCpPolicy" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">policyId=${CompliancePolicyId}&amp;stateStatus=PUBLISHED&amp;type=status&amp;policyTypeId=8&amp;comments=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/checkValidAction</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssignPolicies" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">comments=&amp;deviceSetId=${DeviceSetId}&amp;totalRows=9&amp;totalRowsTemp=9&amp;policyName1=${PasscodePolicyId}&amp;geoFence1=&amp;timeFence1=&amp;policyName2=&amp;geoFence2=&amp;timeFence2=&amp;policyName3=&amp;geoFence3=&amp;timeFence3=&amp;policyName4=&amp;geoFence4=&amp;timeFence4=&amp;policyName5=&amp;geoFence5=&amp;timeFence5=&amp;policyName6=&amp;geoFence6=&amp;timeFence6=&amp;policyName7=${CompliancePolicyId}&amp;geoFence7=&amp;allowGeoFence7=true&amp;timeFence7=&amp;allowTimeFence7=true&amp;policyName8=${AppPolicyId}&amp;geoFence8=&amp;timeFence8=&amp;policyName9=&amp;geoFence9=&amp;timeFence9=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/applyPolicyDetails</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">3213</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
              </RegexExtractor>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                <stringProp name="VAR">actual</stringProp>
                <stringProp name="JSONPATH">response</stringProp>
                <stringProp name="DEFAULT">payload</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Compare Jsons" enabled="true">
                <stringProp name="TestPlan.comments">test</stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">     String expected=&quot;{\&quot;commandType\&quot;:\&quot;DEVICE_POLICY_PUSH\&quot;,\&quot;correlationId\&quot;:\&quot;1621\&quot;,\&quot;policyId\&quot;:0,\&quot;policyName\&quot;:\&quot;440\&quot;,\&quot;policyStatus\&quot;:null,\&quot;PASSCODE_POLICY\&quot;:{\&quot;AND_MIN_PASSODE_LENGTH\&quot;:\&quot;0\&quot;,\&quot;PASSCODE_CONTENT\&quot;:\&quot;ANY\&quot;,\&quot;ALLOW_IDLE_TIME_BEFORE_UNLOCK\&quot;:\&quot;0\&quot;,\&quot;FAILED_ATTEMPTS_LIMIT\&quot;:\&quot;3\&quot;,\&quot;AND_REQUIRE_PASSCODE\&quot;:\&quot;true\&quot;,\&quot;AND_UNIQUE_PASSCODES_BEFORE_REUSE\&quot;:\&quot;3\&quot;,\&quot;REQUIRE_STORAGE_ENCRYPTION\&quot;:\&quot;NO\&quot;,\&quot;MAX_PASSCODE_AGE_DAYS\&quot;:\&quot;30\&quot;}}&quot;;
     vars.put(&quot;isSuccess&quot;, &quot;false&quot;);
	String actual = vars.get(&quot;actual&quot;); 
	Map obj1 = new com.google.gson.Gson().fromJson(expected, Map.class);
	Map obj2 = new com.google.gson.Gson().fromJson(actual, Map.class);

	obj1.remove(&quot;correlationId&quot;);
		obj1.remove(&quot;policyId&quot;);
		obj1.remove(&quot;policyName&quot;);
		obj1.remove(&quot;policyStatus&quot;);
		
		obj2.remove(&quot;correlationId&quot;);
		obj2.remove(&quot;policyId&quot;);
		obj2.remove(&quot;policyName&quot;);
		obj2.remove(&quot;policyStatus&quot;);
		
	if(obj1.equals(obj2)){
		vars.put(&quot;isSuccess&quot;, &quot;true&quot;);
	}</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">isSuccess</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}&amp;responseCode=${isSuccess}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with all compliant Conditions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NoViolation Heartbeat with one non compliant condition and 2 compliant conditions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Compliant&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with App violation ,but passcode compliant and Min OS compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Unauthorized App Usage )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with App ,passcode violation ,but MinOS compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=4.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Unauthorized App Usage, compliancePolicy:Rule1 )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with Min OS ,passcode violation ,but App Compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Min OS Version )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat Min OS ,App violation ,but passcode compliant" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=true&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Unauthorized App Usage, compliancePolicy:Rule1, Min OS Version )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Violation Heartbeat with ALL(passcode ,App,Min OS) violations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">deviceImei=&amp;longitude=&amp;latitude=&amp;currentCarrier=&amp;currentCountry=&amp;homeCarrier=&amp;phoneNumber=&amp;simNumber=&amp;MDMagentversion=&amp;isJailbroken=&amp;osVersion=2.3.3&amp;deviceModel=&amp;deviceid=${deviceId}&amp;localTimeZone=&amp;connectedWifi=&amp;wifiList=&amp;deviceapps={&quot;newAppsInstalled&quot;:[{&quot;appName&quot;:&quot;Launchpad&quot;,&quot;bundleId&quot;:&quot;com.kony.mdmclient&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0.0.1&quot;},{&quot;appName&quot;:&quot;Easy IRCTC&quot;,&quot;bundleId&quot;:&quot;in.smartwebs.easy_irctc&quot;,&quot;appMemoryUsed&quot;:&quot;&quot;,&quot;version&quot;:&quot;1.0&quot;}]}&amp;platform=ANDROID&amp;passcode_compliance=false&amp;currentGeoFence=&amp;hideMyApps=&amp;hideMyLocation=&amp;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/ota/sendheartbeat</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Send Heartbeat</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDeviceInfo" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}//adminconsole/devicemgmt/getDeviceInfoTab.htm?requestId=${requestId}&amp;enrollReqId=${Enroll_req_id}&amp;platformName=Android&amp;deviceId=${deviceId}&amp;rnd=0.5576884400846868&amp;_=1400149258492</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor" enabled="true">
                <stringProp name="XPathExtractor.default">NOT_FOUND</stringProp>
                <stringProp name="XPathExtractor.refname">ComplianceState</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">//div[@class=&apos;tabContainer&apos;]/dl/dt[label=&apos;Compliance State&apos;]/following-sibling::dd[1]/text()</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">true</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <boolProp name="XPathExtractor.quiet">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="script">String ComplianceState=vars.get(&quot;ComplianceState&quot;);

if(ComplianceState.startsWith(&quot;Non Compliant (Unauthorized App Usage, compliancePolicy:Rule1, Min OS Version )&quot;)){
	vars.put(&quot;CPstate&quot;,&quot;SUCCESS&quot;);
}else{
	vars.put(&quot;CPstate&quot;,&quot;FAILURE&quot;);
	}</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">CPstate</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">false</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
            </hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey"></stringProp>
              <stringProp name="script">vars.put(&quot;hasCommands&quot;,&quot;true&quot;);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AcknowledgeMDMCommands" enabled="true"/>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Loop on Pending Commands" enabled="true">
                <stringProp name="TestPlan.comments">execute pending commands</stringProp>
                <stringProp name="WhileController.condition">${hasCommands}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkin" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=checkIn&amp;executionStatus=COMPLETED</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="responseMessage Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">responseMessage</stringProp>
                    <stringProp name="RegexExtractor.regex">responseMessage\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="Extract response" enabled="true">
                    <stringProp name="VAR">payload</stringProp>
                    <stringProp name="JSONPATH">response</stringProp>
                    <stringProp name="DEFAULT">NOT_FOUND</stringProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correlationId  Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correlationId</stringProp>
                    <stringProp name="RegexExtractor.regex">correlationId\&quot;:\&quot;(.*?)\&quot;(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">3213</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="Sample.scope">all</stringProp>
                    <stringProp name="Scope.variable">NW_POLICY_ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">java</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey"></stringProp>
                    <stringProp name="script">String str = vars.get(&quot;payload&quot;);
String str1= vars.get(&quot;responseMessage&quot;);
		 
		if(str!=null &amp;&amp; str.equals(&quot;NOT_FOUND&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else if(str1!=null &amp;&amp; str1.equals(&quot;NO_PENDING_COMMANDS&quot;)){
		   vars.put(&quot;hasCommands&quot;,&quot;false&quot;);
		   
		}else{
			vars.put(&quot;hasCommands&quot;,&quot;true&quot;);
			}
		</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Check ResponseMessage" enabled="true">
                  <stringProp name="IfController.condition">&quot;${hasCommands}&quot; == &quot;true&quot;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateStatus" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">deviceId=${deviceId}&amp;action=updateStatus&amp;executionStatus=COMPLETED&amp;correlationId=${correlationId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/devicemanager/android/server</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">updatePendingCommands</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1400082038000</longProp>
        <longProp name="ThreadGroup.end_time">1400082038000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - Login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">j_username=${MGMT_USERNAME}&amp;j_password=${MGMT_PASSWORD}&amp;j_source=&amp;j_domain=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/mgmt/${SPRING_SECURITY_CHECK_URI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager (login form post)" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1448719514">/login</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Successful authenticated response URL should not contain &apos;login&apos;</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Cleaning Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UnPublishDeviceSet" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/checkValidAction?deviceSetId=${__P(DeviceSetId)}&amp;stateStatus=UNPUBLISHED&amp;type=status&amp;0.3721138421231356&amp;_=1398164584778</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UnpublishCpPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">tPolicyId=${__P(CompliancePolicyId)}&amp;tPolicyTypeId=8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/applyPolicyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UnPublishAppPolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">tPolicyId=${__P(AppPolicyId)}&amp;tPolicyTypeId=11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/applyPolicyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UnpublishPasscodePolicy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">tPolicyId=${__P(PasscodePolicyId)}&amp;tPolicyTypeId=1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/applyPolicyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteCpPolicy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/deletePolicy?policyId=${__P(CompliancePolicyId)}&amp;policyTypeId=8&amp;_=1398166836267</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteAppPolicy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/deletePolicy?policyId=${__P(AppPolicyId)}&amp;policyTypeId=11&amp;_=1398166836267</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeletePasscodePolicy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/policy/deletePolicy?policyId=${__P(PasscodePolicyId)}&amp;policyTypeId=1&amp;_=1398166836267</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteDeviceSet" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">deviceSetId=${__P(DeviceSetId)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/adminconsole/deviceset/deletedeviceSet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - Logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${SERVER_CONTEXT}/mgmt/${SPRING_SECURITY_LOGOUT_URI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1846895204">Location:(.*)/login</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Successful authenticated response URL should not contain &apos;login&apos;</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Delete Device" enabled="true"/>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="MySql  Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${DBDAILECT}&quot; == &quot;MYSQL&quot; || &quot;${DBDAILECT}&quot; == &quot;ORACLE&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_device_details" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  mdm_device_details where mdm_device_id=1009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_user_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  mdm_user_device where mdm_usr_device_id=1009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_enroll_request" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from mdm_enroll_request where id=10009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from mdm_device  where mdm_device_id=1009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="MSSql  Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${DBDAILECT}&quot; == &quot;MSSQL&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_device_details" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  emm.mdm_device_details where mdm_device_id=1009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_user_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from  emm.mdm_user_device where mdm_usr_device_id=1009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_enroll_request" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from emm.mdm_enroll_request where id=10009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="tearDown &gt;&gt; JDBC Request - virtual device - mdm_device" enabled="true">
              <stringProp name="dataSource">jdbc</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from emm.mdm_device  where mdm_device_id=1009</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
